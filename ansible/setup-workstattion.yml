---
- hosts: localhost
  vars:
    work_file_name: "work.yml"
  tasks:
    - name: Workstation setup
      become: yes
      ansible.builtin.debug:
        msg: Workstation setup

    - name: Get fedora version
      shell: rpm -E %fedora
      register: fv
    - set_fact: fedora_current={{ fv.stdout }}

    ################################################################################
    ######################## CREATE DIRS ###########################################
    ################################################################################

    - file:
        path: /home/{{ ansible_user_id }}/{{ item }}
        state: directory
        mode: 0755
      with_items:
        - repos
        - sandbox
        - scripts
        - .local/share/fonts

    ################################################################################
    ######################## Add package repos #####################################
    ################################################################################

    - name: Install {{ fedora_current }} rpmfusion repo packages
      become: yes
      dnf:
        name: "{{ item }}"
        state: present
        disable_gpg_check: true
      with_items:
        - https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ fedora_current }}.noarch.rpm
        - https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ fedora_current }}.noarch.rpm

    - name: Import kubectl gpg key
      become: yes
      ansible.builtin.rpm_key:
        state: present
        key: https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

    - name: Add kubectl repo
      become: yes
      yum_repository:
        name: Kubernetes
        description: Kubernetes YUM repo
        baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
        gpgcheck: yes
        gpgkey: https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

    - name: Import packages.microsoft gpg key
      become: yes
      ansible.builtin.rpm_key:
        state: present
        key: https://packages.microsoft.com/keys/microsoft.asc

    - name: Add MS vscode repo
      become: yes
      yum_repository:
        name: vscode
        description: Visual Studio Code
        baseurl: https://packages.microsoft.com/yumrepos/vscode
        gpgcheck: yes
        gpgkey: https://packages.microsoft.com/keys/microsoft.asc

    - name: Import docker gpg key
      become: yes
      ansible.builtin.rpm_key:
        state: present
        key: https://download.docker.com/linux/fedora/gpg
        fingerprint: 060A 61C5 1B55 8A7F 742B 77AA C52F EB6B 621E 9F35

    - name: Fetch Docker .repo file
      become: yes
      get_url:
        url: https://download.docker.com/linux/fedora/docker-ce.repo
        dest: /etc/yum.repos.d/docker-ce.repo

    ################################################################################
    ######################## DNF   #################################################
    ################################################################################

    - name: DNF upgrade all packages
      become: yes
      dnf:
        name: "*"
        state: latest

    - name: Install the 'multimedia' package group
      become: yes
      dnf:
        name: "@multimedia"
        state: present
        exclude: PackageKit-gstreamer-plugin
        install_weak_deps: false

    - name: Install the 'sound-and-video' package group
      become: yes
      dnf:
        name: "@sound-and-video"
        state: present

    - name: DNF Install items
      become: yes
      dnf:
        name:
          - wget
          - git
          - curl
          - neovim
          - ripgrep
          - dnf-plugins-core
          - python3-pip
          - bat
          - golang
          - fedora-workstation-repositories
          # - gnome-tweak-tool
          - xclip
          - jq
          - fzf
          - fish
          - tilix
          - podman
          - buildah
          - lsd
          - NetworkManager
          - git-delta
          - direnv
          - openssl
          - openssl-devel
          - restic
          - util-linux-user
          # From other repos:
          - code
          - kubectl
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
          # VA-API Video decoding on Intel
          - intel-media-driver
          - libva
          - libva-utils
          - libva-intel-driver
          - ffmpeg
          - ffmpeg-libs
        state: present

    ################################################################################
    ############################### GIT SETUP ######################################
    ################################################################################

    - git:
        repo: "https://github.com/polymorphic92/dotfiles.git"
        dest: /home/{{ ansible_user_id }}/dotfiles

    - git_config:
        name: user.name
        scope: global
        value: "polymorphic92"

    - git_config:
        name: user.email
        scope: global
        value: "polymorphic92@gmail.com"

    ################################################################################
    ########################  Flatpaks  ############################################
    ################################################################################

    - name: Add the flathub flatpak repository remote to the user installation
      ansible.builtin.shell: flatpak remote-add --if-not-exists --user flathub https://flathub.org/repo/flathub.flatpakrepo

    - name: Install Flatpaks
      community.general.flatpak:
        method: user
        name:
          - com.bitwarden.desktop
          - org.wezfurlong.wezterm
          - com.github.tchx84.Flatseal
          - org.fedoraproject.MediaWriter
          - com.google.Chrome
          - org.gnome.Extensions

    ################################################################################
    ########################  DOCKER    ############################################
    ################################################################################

    - name: "Add {{ ansible_user_id }} to docker group"
      become: yes
      user:
        name: "{{ ansible_user_id }}"
        groups: docker
        append: yes

    - name: Make sure the docker service is running
      become: yes
      systemd:
        state: started
        name: docker
        enabled: yes

    ################################################################################
    ##########################  FONTS     ##########################################
    ################################################################################

    - name: "Download Nerd Font Complete"
      become: yes
      get_url:
        url: "https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/DroidSansMono/complete/Droid%20Sans%20Mono%20Nerd%20Font%20Complete.otf"
        dest: /usr/share/fonts/Droid Sans Mono for Powerline Nerd Font Complete.otf
        mode: 0774

    ################################################################################
    ######################## RAW Script Installs ###################################
    ################################################################################
    - name: "Sudo Script installs"
      become: yes
      ansible.builtin.shell: |
        ## unsupported dnf items ##
        dnf group upgrade --with-optional Multimedia -y

        ## change shell to fish shell
        chsh -s /usr/bin/fish {{ ansible_user_id }}

    - name: "User Script installs"
      ansible.builtin.shell: |
        ## Install rustup ##
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | bash -s -- -y
        curl -fsSL https://starship.rs/install.sh | sh -s -- -y

        ## Install Papirus ##
        wget -qO- https://raw.githubusercontent.com/PapirusDevelopmentTeam/papirus-icon-theme/master/install.sh | sh
        fc-cache -f -v

        ## Install(s) via cargo ##
        source "$HOME/.cargo/env"
        cargo install bottom --locked

    - name: "Include {{ work_file_name }} tasks if it exists"
      ansible.builtin.include_tasks:
        file: "{{ work_file_name }}"
      ignore_errors: true
      # when: "work_file_name is file"
